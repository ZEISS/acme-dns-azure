name: Release

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      prerelease:
        type: string
        required: false
        default: 'true'

permissions:
  issues: write
  checks: write
  pull-requests: write
  contents: write
  pages: write
  id-token: write
  packages: write

jobs:
  unit_test:
    permissions:
      issues: write
      checks: write
      pull-requests: write
    uses: ./.github/workflows/unit_test.yml
  integration_test:
    needs: [unit_test]
    uses: ./.github/workflows/integration_test.yml
    secrets: inherit
  docs:
    needs: [integration_test]
    uses: ./.github/workflows/docs.yml
  publish_pypi:
    runs-on: ubuntu-latest
    needs: [docs]
    steps:
      - uses: actions/checkout@v4
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v2.0
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
  function_package:
    needs: [publish_pypi]
    uses: ./.github/workflows/azure_function.yml
  docker_build:
    needs: [publish_pypi]
    uses: ./.github/workflows/docker.yml
    with:
      tag: ${{ inputs.tag }}
  git_release:
    runs-on: ubuntu-latest
    needs: [docker_build, function_package]
    permissions:
      contents: write
    steps:
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: doc
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          path: '/tmp/${{  github.ref_name }}'
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changes }}
          artifacts: '/tmp/${{  github.ref_name }}/**/*.zip'
          prerelease: ${{ inputs.prerelease }}
          tag: ${{ inputs.tag }}
